@function strip-unit($n) {
  @return $n / ($n * 0 + 1);
}

@function px($n, $font-size: 16px) {
  $result: $n;

  @if unit($n) == "rem" {
    $result: strip-unit($n) * $font-size;
  }
  @else if unit($n) != "px" {
    @error "px function requires rem units";
  }

  @return $result;
}

@function expect($x, $y) {
  @if $x != $y {
    @error "got " + $y + " expected " + $x;
  }

  @return $y;
}

$page-padding: 1rem;
$logo-px: 100px;
$gutter: 2rem;
$container: 36rem;

// This is required for media query on Chrome, which doesn't accept relative
// units like rem or em in calculations. Note that even if we were to pass rems
// to the media query, it wouldn't honor the html font-size; for the purpose of
// media queries, rems are always 16px.
$container-px: expect(576px, px($container));

// Breakpoints
$desktop: expect(740px, px($page-padding) + $logo-px + px($gutter) + $container-px + px($page-padding));
$embigger: expect(820px, px($page-padding, 18) + $logo-px + px($gutter, 18) + px($container, 18) + px($page-padding, 18));
$embiggest: expect(900px, px($page-padding, 20) + $logo-px + px($gutter, 20) + px($container, 20) + px($page-padding, 20));

//----------------------------------------------------------------------
// box-sizing
//----------------------------------------------------------------------

html {
  box-sizing: border-box;
}

* {
  box-sizing: inherit;

  &:before, &:after {
    box-sizing: inherit;
  }
}

//----------------------------------------------------------------------
// fonts
//----------------------------------------------------------------------

$sans: "Roboto Condensed", sans-serif;
$serif: "Crimson Pro", serif;
$mono: "Roboto Mono", monospace;

body {
  font-family: $serif;
  font-weight: 400;
}

header, footer {
  font-family: $sans;
}

h1, h2, h3 {
  font-family: $sans;
  font-weight: 700;
}

pre, code, kbd, samp, tt {
  font-family: $mono;
}

@mixin meta {
  font-family: $sans;
}

//----------------------------------------------------------------------
// typography
//----------------------------------------------------------------------

html {
  font-size: 18px;

  @media (min-width: #{$desktop}) {
    font-size: 16px;
  }

  @media (min-width: #{$embigger}) {
    font-size: 18px;
  }

  @media (min-width: #{$embiggest}) {
    font-size: 20px;
  }
}

body {
  line-height: 1.5;
}

h1, .h1 {
  font-size: 2rem;
  line-height: 1.125;
  margin-top: 0;
  margin-bottom: 1rem;
}

h2, .h2 {
  font-size: 1.5rem;
  line-height: 1.25;
  margin-top: 2.5rem;
  margin-bottom: 1rem;
}

h3, .h3 {
  font-size: 1.25rem;
  line-height: 1.375;
  margin-top: 1.5rem;
  margin-bottom: 1rem;
}

pre, code, kbd, samp, tt {
  font-size: 0.75rem;
  line-height: 1.4;
}

p, pre {
  margin-top: 0;
  margin-bottom: 1rem;
}

blockquote {
  font-style: italic;
}

@mixin meta-lg {
  @include meta;

  font-size: 1.25rem;
}

@mixin meta-sm {
  @include meta;

  font-size: 0.75rem;
}

//----------------------------------------------------------------------
// colors and decorations
//----------------------------------------------------------------------

$colors-light: (
  "background": #fff,
  "text": #555,
  "heading": #444,
  "icon": #333,
  "accent": #246EB9,
  "link": #246EB9,
);

$colors-dark: (
  "background": #111,
  "text": #ccc,
  "heading": #ddd,
  "accent": #76c2fb,
  "icon": #ccc,
  "link": #76c2fb,
);

:root {
  @each $name, $color in $colors-light {
    --#{$name}-color: #{$color};
  }
  @media (prefers-color-scheme: dark) {
    @each $name, $color in $colors-dark {
      --#{$name}-color: #{$color};
    }
  }
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
}

h1, h2, h3 {
  color: var(--heading-color);
}

a {
  color: var(--link-color);
  text-decoration: none;
}

.info-social svg {
  fill: var(--icon-color);
}

//----------------------------------------------------------------------
// page layout
//----------------------------------------------------------------------

.page-layout {
  padding: $page-padding;
  display: grid;

  // minmax here allows pre to fit with max-width
  // https://css-tricks.com/preventing-a-grid-blowout/
  grid-template-columns: $logo-px minmax(0, $container);
  grid-template-areas:
    "logo nav"
    "title title"
    "meta meta"
    "main main"
    "footer footer";
  column-gap: $gutter;

  @media (min-width: $desktop) {
    // center on the content column, not the full grid including logo column
    margin-left: max(0px, calc(50vw - (#{$container} / 2) - (#{$page-padding} + #{$logo-px} + #{$gutter})));
    grid-template-areas:
      "logo title"
      ". meta"
      "nav main"
      ". footer";
  }
}

.page-logo {
  grid-area: logo;
}

.page-nav {
  grid-area: nav;

  @include meta-lg;

  display: flex;

  > *:not(:first-child) {
    margin-left: 1.5rem;
  }

  @media (min-width: $desktop) {
    margin-top: 1rem;
    margin-left: 0.25rem;
    flex-direction: column;

    > *:not(:first-child) {
      margin-left: 0;
      margin-top: 0.5rem;
    }
  }
}

.page-heading {
  grid-area: title;
  align-self: end;
  margin-top: 1.5rem;
  margin-bottom: 0;
}

.post-meta {
  grid-area: meta;
  margin-top: 0.25rem;
}

.page-content {
  grid-area: main;
  margin-top: 1rem;
}

.page-footer {
  grid-area: footer;
  margin-top: 1.5rem;
  padding-top: 1rem;
  padding-bottom: 2rem;
  border-top: 3px solid var(--accent-color);
  display: flex;
  justify-content: space-between;
  align-items: baseline;
}

.info-site {
  @include meta-sm;

  margin-bottom: 1rem;
}

.info-social {
  a {
    margin-left: 0.5em;
  }

  svg {
    width: 20px;
  }
}

hr {
  border: none;
  border-top: 3px solid var(--accent-color);
}

blockquote {
  margin-left: 1em;
  padding-left: 1em;
  border-left: 2px solid var(--accent-color);
}

pre {
  border-radius: 4px;
  max-width: 100%;
  padding: 1rem;
  overflow-x: auto;
}

*:not(pre) > code {
  padding: 2px 3px;
  border-radius: 3px;
}

//----------------------------------------------------------------------
// home
//----------------------------------------------------------------------

.posts-index {
  margin: 0;
  padding: 0;
  text-indent: 0;
  list-style-type: none;

  .post-listing {
    margin-bottom: 1.5rem;
  }

  .post-header {
    margin: 0;
    & > *:first-child {
      margin-top: 0;
    };
    & > *:last-child {
      margin-bottom: 0;
    };
  }

  .post-excerpt {
    margin-bottom: 0.375rem;
  }
}

//----------------------------------------------------------------------
// posts
//----------------------------------------------------------------------

.post-meta {
  @include meta-sm;
}

.note {
  padding: 1em;
  border: 1px solid #ddd;
  border-radius: 4px;
  box-shadow: 0 0 10px #ddd;
}

img, video {
  max-width: 100%;
  height: auto;
}

.post-image {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;

  a, img, video {
    display: block;
  }

  img, video {
    width: auto;
  }

  @media (min-width: $desktop) {
    margin-left: 3em;
    margin-right: 2em;
    max-width: 28em;

    &.wide {
      margin-left: 0em;
      margin-right: 0em;
      max-width: none;
    }

    &.bleed {
      margin-left: 0em;
      margin-right: 0em;
      max-width: none;
      width: 100vw;
      visibility: hidden;
    }

    &.bled {
      margin-left: 0em;
      margin-right: 0em;
      max-width: none;
      position: absolute;
      left: 0;
      width: 100%;
      margin-top: 0;
    }
  }
}
